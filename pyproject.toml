[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "doceater"
version = "0.1.0"
description = "Background service that watches folders for new files, converts them to Markdown using Docling, and stores content with semantic search capabilities"
authors = [{name = "DocEater Team", email = "team@doceater.dev"}]
readme = "README.md"
requires-python = ">=3.13"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    # Core dependencies - MVP only
    "typer>=0.12.0",
    "rich>=13.0.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",

    # File watching and processing
    "watchdog>=4.0.0",
    "docling>=2.0.0",

    # Database (no embeddings in MVP)
    "asyncpg>=0.29.0",
    "sqlalchemy[asyncio]>=2.0.0",
    "alembic>=1.13.0",

    # Utilities
    "aiofiles>=24.0.0",
    "loguru>=0.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "types-aiofiles",
]

[project.scripts]
doceat = "doceater.cli:main"

[project.urls]
Homepage = "https://github.com/yourusername/doceater"
Repository = "https://github.com/yourusername/doceater"
Issues = "https://github.com/yourusername/doceater/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/doceater"]

[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
]
ignore = ["E501"]  # line too long (handled by formatter)

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["doceater"]

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["docling.*", "watchdog.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=doceater --cov-report=term-missing --cov-report=html"
asyncio_mode = "auto"

[dependency-groups]
dev = [
    "aiosqlite>=0.21.0",
    "mypy>=1.16.1",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.2",
    "types-aiofiles>=24.1.0.20250606",
]
